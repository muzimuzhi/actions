# https://docs.github.com/en/actions/reference/metadata-syntax-for-github-actions

name: Setup pre-commit

description: Install pre-commit via uv, init it and setup caching

inputs:
  uv-if-setup:
    description: "Setup uv?"
    default: 'true'
    required: false
  version:
    description: "Version of `pre-commit` to install"
    default: 'latest'
    required: false
  config-path:
    description: "Path to the pre-commit config file"
    default: '.pre-commit-config.yaml'
    required: false
  if-run:
    description: "Run pre-commit hooks after setup?"
    default: 'true'
    required: false
  run-args:
    description: "Arguments to pass to `pre-commit run`"
    default: '--all-files --show-diff-on-failure --color=always'
    required: false

runs:
  using: "composite"

  steps:
    - name: Setup uv
      if: ${{ fromJSON(inputs.uv-if-setup) }}
      uses: astral-sh/setup-uv@v6
      with:
        # > By default, the uv cache is pruned after every run, removing
        # pre-built wheels, but retaining any wheels that were built from
        # source.
        # https://github.com/astral-sh/setup-uv/tree/v6/?tab=readme-ov-file#disable-cache-pruning
        # > With uv, it turns out that it's often faster to omit pre-built
        # wheels from the cache (and instead re-download them from the
        # registry on each run).
        # https://docs.astral.sh/uv/concepts/cache/#caching-in-continuous-integration
        enable-cache: false

    - name: Install pre-commit
      shell: bash
      run: |
        # Install pre-commit
        uv tool install pre-commit@${{ inputs.version }}

    # https://pre-commit.com/#github-actions-example
    # https://github.com/pre-commit/action/blob/main/action.yml
    - name: Generate cache hash
      id: cache-hash
      shell: bash
      run: |
        # Generate cache hash
        echo "$(python -VV)" > "${{ runner.temp }}/py_version"
        echo "CACHE_HASH=${{ hashFiles(inputs.config-path, format('{0}/py_version', runner.temp)) }}" >> $GITHUB_OUTPUT

    - name: Restore pre-commit cache
      uses: actions/cache@v4
      with:
        # https://pre-commit.com/#managing-ci-caches
        path: ${{ env.PRE_COMMIT_HOME || (env.XDG_CACHE_HOME && format('{0}/pre-commit', env.XDG_CACHE_HOME) || '~/.cache/pre-commit') }}
        key: pre-commit-${{ runner.os }}-${{ runner.arch }}-${{ steps.cache-hash.outputs.CACHE_HASH }}
        restore-keys: |
          pre-commit-${{ runner.os }}-${{ runner.arch }}-

    - name: Install pre-commit hooks
      shell: bash
      run: |
        # Install pre-commit hooks
        pre-commit install \
          --config ${{ inputs.config-path }} \
          --install-hooks

    - name: Clean unused pre-commit hooks
      shell: bash
      run: |
        # Clean unused pre-commit hooks
        pre-commit gc

    - name: Run pre-commit hooks
      if: ${{ fromJSON(inputs.if-run) }}
      shell: bash
      run: |
        # Run pre-commit hooks
        pre-commit run \
          --config ${{ inputs.config-path }} \
          ${{ inputs.run-args }}
